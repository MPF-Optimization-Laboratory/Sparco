%%
% In our first example we will use <http://www.lx.it.pt/~mtf/GPSR GPSR
% solver> to solve a problem generated by Sparco.

%% Generating the test problem
% We generate the <problems.html#prob006test problem 6> : Piecewise cubic polynomial signal.
  P = generateProblem(6);

%%
% The structure of the test problem provides an easy access to all 
% the elements we need : $A$ and $b$.

  b = P.b;  % The right-hand-side vector.
  A = P.A;  % The Dictionary
  
%% Solving the problem  
% We solve the $L_1$ recovery problem :
%
% $$ \mbox{min } \frac{1}{2} \|Ax - b\|_2^2 + \lambda \|x\|_1 $$
%
% with $\lambda = 1000$ to put a lot of weight on the sparsity of the
% resulting vector $x_0$. 
  lambda = 1000;
  x = GPSR_BB(b, A, lambda);
  
%%
% The result is the sparse representation of the signal in the sparsity
% basis $B$
  B = P.B
  figure;
  plot(x); hold on; plot(P.x0,'ro'); hold off;
  title('Coefficients of the reconstructed signal')
  xlabel('Coefficient')
  
%% Recovering the signal  
% We use the function handle P.reconstruct to use the coefficients in
% x to reconstruct the original signal.
  y     = P.reconstruct(x);    % Use x to reconstruct the signal.
  yorig = P.signal;            % P.Signal is the original signal.

  figure;
  plot(1:length(y), y    ,'b', ...
       1:length(y), yorig,'r');
  legend('Reconstructed signal','Original signal');
  title('Reconstructed and original signals');

